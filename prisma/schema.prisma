// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  ARCHIVED
}

enum UserCategory {
  AUTHOR
  BOARD
  STAFF
  RESEARCHER
}

enum ErrorSeverity {
  INFO
  WARNING
  ERROR
  CRITICAL
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  password      String
  role          UserRole    @default(USER)
  status        UserStatus  @default(ACTIVE)
  errorLogs     ErrorLog[]
  profile       Profile?    @relation("UserProfile")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("users")
}

model Profile {
  id           String       @id @default(cuid())
  firstName    String
  lastName     String
  email        String?
  phoneNumber  String?
  organization String?
  bio          String?      @db.Text
  photoUrl     String?
  category     UserCategory @default(STAFF)
  userId       String       @unique
  user         User         @relation("UserProfile", fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("profiles")
}

model ErrorLog {
  id          String        @id @default(cuid())
  userId      String?
  path        String
  method      String
  message     String
  stack       String?
  severity    ErrorSeverity @default(ERROR)
  metadata    Json?
  user        User?         @relation(fields: [userId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("error_logs")
  @@index([userId])
  @@index([severity])
  @@index([createdAt])
}
